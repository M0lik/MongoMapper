// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Api Routes Test filename 1`] = `
"import * as express from \\"express\\";

import Test1Routes from './Test1';
import Test2Routes from './Test2';

let router = express.Router();

router.use('/Test1', Test1Routes);
router.use('/Test2', Test2Routes);

export default router;"
`;

exports[`Api Writer Test filename 1`] = `
"import Test1 from '../Schema/Test1';

import * as express from 'express';

let router = express.Router();

router.get('/', async (req, res) => {
        let result = await Test1.readByField();
        res.send(result);
    });

router.get('/:id', async (req, res) => {
        let result = await Test1.readById(req.params.id);
        res.send(result);
    });

router.post('/', async (req, res) => {
        let create = await Test1.create(req.body);
        res.sendStatus(200);
    });

router.delete('/:id', async (req, res) => {
        let result = await Test1.delete(req.params.id);
        res.send(result);
    });

export default router;"
`;

exports[`file writer Test whithout filename 1`] = `
"var mongoose = require('mongoose');
var Schema = mongoose.Schema;

var Test1Schema = new Schema({title:titre});

const Test1Data = mongoose.model(\\"Test1\\", Test1Schema, \\"Test1\\");

const Test1 = {
create : async (objToCreate : any) => (new Test1Data(objToCreate)).save(),

readByField : async (objFilter : any = {}) => await Test1Data.find(objFilter),
readById : async (dataId : string) => mongoose.Types.ObjectId.isValid(dataId) ? (await Test1Data.find({_id : dataId}))[0] : null,

update : async (document : any) => await document.save(),

delete : async (dataId : any) => mongoose.Types.ObjectId.isValid(dataId) ? await Test1Data.deleteOne({_id : dataId}) : null,

}

export default Test1;"
`;
